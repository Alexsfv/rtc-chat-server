{"version":3,"sources":["assets/styles/GlobalStyles.ts","assets/fonts/fonts.ts","assets/styles/reset.ts","reportWebVitals.ts","index.tsx","assets/styles/constants.ts","utils/call.ts","utils/media.ts","components/App/App.tsx","services/SocketService.ts","store/mediaState.ts","store/rootState.ts","store/uiState.ts","store/callModalState.ts","store/callState.ts","services/RTCService.ts","services/RecordService.ts","components/common/inputs/TextInput/index.ts","components/common/inputs/Checkbox/index.ts","components/common/buttons/Button/index.ts","components/common/buttons/CallControl/index.ts","components/View/components/LocalVideo/LocalVideo.styled.ts","components/View/components/LocalVideo/LocalVideo.tsx","components/View/components/Placeholder/Placeholder.styled.ts","components/View/components/Placeholder/Placeholder.tsx","components/View/components/RecordControls/RecordControls.styled.ts","components/View/components/RecordControls/RecordControls.tsx","components/View/components/RemoteVideo/RemoteVideo.styled.ts","components/View/components/RemoteVideo/RemoteVideo.tsx","components/View/components/SidebarBtn/SidebarBtn.styled.ts","components/View/components/SidebarBtn/SidebarBtn.tsx","components/View/components/ViewControls/ViewControls.styled.ts","components/View/components/ViewControls/ViewControls.tsx","components/View/View.styled.tsx","components/View/View.tsx","components/Sidebar/components/BarSwitcher/BarSwitcher.styled.ts","components/Sidebar/components/BarSwitcher/BarSwitcher.tsx","components/Sidebar/components/ConnectBar/ConnectBar.styled.ts","components/Sidebar/components/ConnectBar/ConnectBar.tsx","components/Sidebar/components/MessengerBar/MessengerBar.styled.ts","components/Sidebar/components/MessengerBar/MessengerBar.tsx","components/Sidebar/Sidebar.styled.tsx","components/Sidebar/Sidebar.tsx","components/modals/CallModal/CallModal.styles.ts","components/modals/CallModal/CallModal.tsx","components/common/company/Logo/Logo.styled.ts","components/common/company/Logo/Logo.tsx","services/index.ts","components/layout/AppLayout/AppLayout.styles.tsx","components/layout/AppLayout/AppLayout.tsx","components/common/inputs/TextInput/TextInput.styles.ts","components/common/inputs/TextInput/TextInput.tsx","components/common/inputs/Checkbox/Checkbox.styles.ts","components/common/inputs/Checkbox/Checkbox.tsx","components/common/buttons/Button/Button.styles.ts","components/common/buttons/Button/Button.tsx","components/common/buttons/CallControl/CallControl.styles.ts","components/common/buttons/CallControl/CallControl.tsx","components/index.ts"],"names":["GlobalStyles","createGlobalStyle","css","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","COLORS","WHITE","WHITE_LITE","WHITE_EXTA_LITE","BLACK","BLACK_LITE","BLACK_EXTA_LITE","GRAY","GRAY_LITE","GRAY_EXTA_LITE","DANGER","GOLD","GOLD_BRIGHT","GREEN","GREEN_BRIGHT","GREEN_DARK","GREEN_SHINE","SHADOWS","PRIMARY","BREAKPOINTS","XXL","XL","L","M","S","XS","callModalTitleRequest","callType","hasTrack","stream","trackKind","getTracks","some","t","kind","App","observer","useEffect","socketService","connect","socket","io","on","initSubscribers","console","log","code","rootState","media","setPersonalCode","data","rtcService","handleOffer","handleAnswer","handleIceCandidate","createOffer","disconnect","callModal","emptyRandom","sendIceCandidate","emit","sendOffer","sendRandomOffer","sendAnswer","sendDisconnect","partnerId","mediaState","localStream","MediaStream","remoteStream","screenStream","personalCode","isActiveScreen","isRecordingStream","isRecordingStreamPause","receiveLocalStream","a","constraints","audio","video","window","navigator","mediaDevices","getUserMedia","runInAction","val","resetRemoteStream","captureScreen","options","getDisplayMedia","screen","error","setIsActiveScreen","setIsRecordingStream","setIsRecordingStreamPause","makeAutoObservable","this","action","bound","ui","openedSideBar","openedTypeSidebar","messages","allowRandomConnect","setOpenedSidebar","setAllowRandomConnect","setOpenedTypeSidebar","addMessage","message","push","cleanMessages","isShow","title","description","onAccept","onReject","onClose","setData","setShow","reset","setTimeout","call","offer","isConnected","caller","callee","setOffer","setIsConnected","setCaller","setCallee","serversConfig","iceServers","urls","localPeer","dataChannel","setUpPeers","RTCPeerConnection","addEventListener","e","candidate","candidateData","id","status","connectionState","channel","setUpDataChannel","setUpTracks","addTrack","track","forEach","switchScreenTracks","senders","getSenders","localVideoTrack","getVideoTracks","videoSender","find","s","replaceTrack","screenVideoTrack","createDataChannel","text","isOpposite","sendMessage","send","calleeId","isRandom","cancel","setLocalDescription","sdp","localDescription","createRandomOffer","prevRandomCalleeId","isRandomCall","decline","acceptOffer","setRemoteDescription","createAnswer","answer","answerWithCalleeSDP","resetModal","addIceCandidate","close","callerId","recordService","recorder","buffer","recordStream","MediaRecorder","mimeType","initListeners","start","pause","resume","stopRecording","stop","download","blob","Blob","type","url","URL","createObjectURL","createElement","href","target","click","ondataavailable","size","Wrapper","styled","div","LocalVideo","props","videoRef","useRef","hasLocalVideo","Boolean","current","srcObject","className","ref","loop","muted","autoPlay","Placeholder","Control","RecordControls","handleStop","onClick","RemoteVideo","hasRemoteVideo","SidebarBtn","ViewControls","useState","activeMicro","setActiveMicro","switchTrack","enabled","handleChangeLocalStream","color","fontColor","undefined","View","SwitchButton","button","p","active","BarSwitcher","uiState","LogoWrapper","Text","TextBold","FirstText","CodeArea","CallArea","ConnectBar","connectCode","setConnectCode","handleCall","handleRandomCall","textColor","clipboard","writeText","design","value","disabled","onChange","checked","MessageList","Message","opposite","InputField","MessengerBar","setMessage","handleSend","map","m","Math","random","postfix","onKeyDown","key","opened","Background","Body","Sidebar","Title","Description","IconWrapper","ControlsWrapper","reject","CallModal","keyHandler","removeEventListener","Logo","Layout","Container","AppLayout","children","Input","input","inputError","inputPostfix","Error","span","Label","label","Postfix","TextInput","React","forwardRef","otherProps","data-testid","InputWrapper","FakeInput","Checkbox","htmlFor","StyledButton","Button","CallControl"],"mappings":"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","file":"static/js/main.5136ef42.chunk.js","sourcesContent":["import { globalFonts } from \"assets/fonts/fonts\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { resetStyles } from \"./reset\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\nbody {\r\n\tfont-family: \"Montserrat\", sans-serif, Helvetica;\r\n}\r\n\r\n* {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\n${globalFonts()}\r\n${resetStyles()}\r\n`","import { css } from \"styled-components\";\r\n\r\nexport const globalFonts = () => css`\r\n@font-face {\r\n    font-family: 'Montserrat';\r\n    src: local('Montserrat Hairline'), local('Montserrat-Hairline'), url('montserrathairline.woff2') format('woff2'), url('montserrathairline.woff') format('woff'), url('montserrathairline.ttf') format('truetype');\r\n    font-weight: 100;\r\n    font-style: normal;\r\n}\r\n@font-face {\r\n    font-family: 'Montserrat';\r\n    src: local('Montserrat Light'), local('Montserrat-Light'), url('montserratlight.woff2') format('woff2'), url('montserratlight.woff') format('woff'), url('montserratlight.ttf') format('truetype');\r\n    font-weight: 300;\r\n    font-style: normal;\r\n}\r\n@font-face {\r\n    font-family: 'Montserrat';\r\n    src: local('Montserrat'), local('Montserrat-Regular'), url('montserrat.woff2') format('woff2'), url('montserrat.woff') format('woff'), url('montserrat.ttf') format('truetype');\r\n    font-weight: 400;\r\n    font-style: normal;\r\n}\r\n@font-face {\r\n    font-family: 'Montserrat';\r\n    src: local('Montserrat Bold'), local('Montserrat-Bold'), url('montserratbold.woff2') format('woff2'), url('montserratbold.woff') format('woff'), url('montserratbold.ttf') format('truetype');\r\n    font-weight: 700;\r\n    font-style: normal;\r\n}\r\n@font-face {\r\n    font-family: 'Montserrat';\r\n    src: local('Montserrat Black'), local('Montserrat-Black'), url('montserratblack.woff2') format('woff2'), url('montserratblack.woff') format('woff'), url('montserratblack.ttf') format('truetype');\r\n    font-weight: 900;\r\n    font-style: normal;\r\n}\r\n`","import { css } from \"styled-components\";\r\n\r\nexport const resetStyles = () => css`\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n`","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from '@Components';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n","export const COLORS = {\r\n    WHITE: \"#FFFFFF\",\r\n    WHITE_LITE: 'rgba(255,255,255,0.6)',\r\n    WHITE_EXTA_LITE: 'rgba(255,255,255,0.3)',\r\n    BLACK: \"#000000\",\r\n    BLACK_LITE: 'rgba(0,0,0,0.6)',\r\n    BLACK_EXTA_LITE: 'rgba(0,0,0,0.3)',\r\n    GRAY: \"#838383\",\r\n    GRAY_LITE: 'rgba(131,131,131,0.6)',\r\n    GRAY_EXTA_LITE: 'rgba(131,131,131,0.3)',\r\n    DANGER: \"#ff4c4c\",\r\n    GOLD: \"#ff971c\",\r\n    GOLD_BRIGHT: \"#ffb765\",\r\n    GREEN: \"#01d096\",\r\n    GREEN_BRIGHT: \"#05e3af\",\r\n    GREEN_DARK: \"#00966c\",\r\n    GREEN_SHINE: \"#f2fcf4\",\r\n}\r\n\r\nexport const SHADOWS = {\r\n    PRIMARY: `2px 2px 2px 2px ${COLORS.GRAY_EXTA_LITE}`,\r\n}\r\n\r\nexport const BREAKPOINTS = {\r\n    XXL: 1400,\r\n    XL: 1200,\r\n    L: 992,\r\n    M: 768,\r\n    S: 576,\r\n    XS: 480,\r\n}","import { CallType } from 'services';\r\n\r\nexport const callModalTitleRequest = (callType: CallType) => {\r\n    if (callType === 'CHAT_PERSONAL' || callType === 'CHAT_RANDOM') {\r\n        return 'Chat calling'\r\n    }\r\n    if (callType === 'VIDEO_PERSONAL' || callType === 'VIDEO_RANDOM') {\r\n        return 'Video calling'\r\n    }\r\n    return ''\r\n}","export const hasTrack = (stream: MediaStream, trackKind: string) => {\r\n    return stream.getTracks().some(t => t.kind === trackKind)\r\n}","import React, { useEffect } from 'react';\r\nimport { AppLayout, View, Sidebar, CallModal } from '@Components';\r\nimport { GlobalStyles } from '@Assets';\r\nimport { socketService } from 'services';\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nexport const App = observer(() => {\r\n\r\n    useEffect(() => {\r\n        socketService.connect()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles />\r\n            <AppLayout>\r\n                <View />\r\n                <Sidebar />\r\n                <CallModal />\r\n            </AppLayout>\r\n        </>\r\n    );\r\n})\r\n","import { CreateOfferData, IceCandidateData, OfferData } from 'services'\r\nimport io, { Socket } from 'socket.io-client'\r\nimport { rootState } from 'store'\r\nimport { rtcService } from './index'\r\n\r\n\r\nclass SocketService {\r\n    socket: Socket | null = null\r\n\r\n    connect = () => {\r\n        const socketUrl = process.env.NODE_ENV === 'production' ? '/' : 'ws://localhost:3000'\r\n        this.socket = io(socketUrl)\r\n        this.socket.on('connect', this.initSubscribers)\r\n    }\r\n\r\n    initSubscribers = () => {\r\n        this.socket?.on('hello', () => {\r\n            console.log('Hello');\r\n        })\r\n        this.socket?.on('setPersonalCode', (code: string) => {\r\n            rootState.media.setPersonalCode(code)\r\n        })\r\n        this.socket?.on('sendOfferSDP', (data: OfferData) => {\r\n            rtcService.handleOffer(data)\r\n        })\r\n        this.socket?.on('sendAnswerSDP', (data: OfferData) => {\r\n            rtcService.handleAnswer(data)\r\n        })\r\n        this.socket?.on('sendIceCandidate', (data: IceCandidateData) => {\r\n            rtcService.handleIceCandidate(data)\r\n        })\r\n        this.socket?.on('sendRandomOffer', (data: CreateOfferData) => {\r\n            rtcService.createOffer(data)\r\n        })\r\n        this.socket?.on('peerDisconnect', () => {\r\n            rtcService.disconnect()\r\n        })\r\n        this.socket?.on('emptyAvailableRandom', () => {\r\n            rtcService.disconnect()\r\n            rootState.callModal.emptyRandom()\r\n        })\r\n    }\r\n\r\n    sendIceCandidate = (data: IceCandidateData) => {\r\n        this.socket?.emit('sendIceCandidate', data)\r\n    }\r\n\r\n    sendOffer = (data: OfferData) => {\r\n        this.socket?.emit('sendOfferSDP', data)\r\n        console.log('sendOfferSDP')\r\n    }\r\n\r\n    sendRandomOffer = (data: CreateOfferData) => {\r\n        this.socket?.emit('sendRandomOffer', data)\r\n    }\r\n\r\n    sendAnswer = (data: OfferData) => {\r\n        this.socket?.emit('sendAnswerSDP', data)\r\n        console.log('sendAnswerSDP')\r\n    }\r\n\r\n    sendDisconnect = (partnerId: string) => {\r\n        this.socket?.emit('peerDisconnect', {partnerId})\r\n    }\r\n}\r\n\r\nexport const socketService = new SocketService()","\r\nimport { makeAutoObservable, action, runInAction } from 'mobx'\r\n\r\nclass MediaStore {\r\n    localStream: MediaStream = new MediaStream()\r\n    remoteStream: MediaStream = new MediaStream()\r\n    screenStream: MediaStream = new MediaStream()\r\n    personalCode: string = \"\"\r\n    isActiveScreen: boolean = false\r\n    isRecordingStream: boolean = false\r\n    isRecordingStreamPause: boolean = false\r\n\r\n    constructor() {\r\n        makeAutoObservable(\r\n            this,\r\n            {\r\n                receiveLocalStream: action.bound,\r\n                setPersonalCode: action.bound,\r\n                resetRemoteStream: action.bound,\r\n                captureScreen: action.bound,\r\n                setIsActiveScreen: action.bound,\r\n                setIsRecordingStream: action.bound,\r\n                setIsRecordingStreamPause: action.bound,\r\n            }\r\n        )\r\n    }\r\n\r\n    receiveLocalStream = async () => {\r\n        try {\r\n            const constraints = { audio: true, video: true }\r\n            console.log('stream getting began');\r\n\r\n            const stream = await window.navigator.mediaDevices.getUserMedia(constraints)\r\n            console.log('stream getting ends', stream);\r\n            runInAction(() => {\r\n                this.localStream = stream\r\n            })\r\n        } catch (err) {\r\n            console.log('setLocalStream - Error: ', err);\r\n        }\r\n    }\r\n\r\n    setPersonalCode = (val: string) => {\r\n        this.personalCode = val\r\n    }\r\n\r\n    resetRemoteStream = () => {\r\n        this.remoteStream = new MediaStream()\r\n    }\r\n\r\n    captureScreen = async (): Promise<boolean> => {\r\n        try {\r\n            const options: DisplayMediaStreamConstraints = {\r\n                video: true,\r\n                audio: true\r\n            }\r\n            const screen = await navigator.mediaDevices.getDisplayMedia(options)\r\n            runInAction(() => this.screenStream = screen)\r\n            return true\r\n        } catch (err) {\r\n            console.error('Capture screen error: ', err)\r\n            return false\r\n        }\r\n    }\r\n\r\n    setIsActiveScreen = (val: boolean) => {\r\n        this.isActiveScreen = val\r\n    }\r\n\r\n    setIsRecordingStream = (val: boolean) => {\r\n        this.isRecordingStream = val\r\n    }\r\n\r\n    setIsRecordingStreamPause = (val: boolean) => {\r\n        this.isRecordingStreamPause = val\r\n    }\r\n}\r\n\r\nexport const mediaState = new MediaStore()","import { mediaState } from './mediaState';\r\nimport { UIState } from \"./uiState\";\r\nimport { callModalState } from \"./callModalState\";\r\nimport { callState } from \"./callState\";\r\n\r\nexport const rootState = {\r\n    ui: UIState,\r\n    media: mediaState,\r\n    callModal: callModalState,\r\n    call: callState,\r\n}","import { SwitchBars } from \"components/Sidebar/components/BarSwitcher/BarSwitcher.types\"\r\nimport { makeAutoObservable, action } from \"mobx\"\r\n\r\nexport interface MessageChat {\r\n    text: string\r\n    isOpposite: boolean\r\n}\r\n\r\nclass UIStore {\r\n    openedSideBar: boolean = false\r\n    openedTypeSidebar: SwitchBars = \"connect\"\r\n    messages: MessageChat[] = []\r\n    allowRandomConnect: boolean = false\r\n\r\n    constructor() {\r\n        makeAutoObservable(this, {\r\n            setOpenedSidebar: action.bound,\r\n            setAllowRandomConnect: action.bound,\r\n            setOpenedTypeSidebar: action.bound,\r\n            addMessage: action.bound,\r\n            cleanMessages: action.bound,\r\n        })\r\n    }\r\n\r\n    setOpenedSidebar = (val: boolean) => {\r\n        this.openedSideBar = val\r\n    }\r\n\r\n    setAllowRandomConnect = (val: boolean) => {\r\n        this.allowRandomConnect = val\r\n    }\r\n\r\n    setOpenedTypeSidebar = (val: SwitchBars) => {\r\n        this.openedTypeSidebar = val\r\n    }\r\n\r\n    addMessage = (message: MessageChat) => {\r\n        this.messages.push(message)\r\n    }\r\n\r\n    cleanMessages = () => {\r\n        this.messages = []\r\n    }\r\n}\r\n\r\nexport const UIState = new UIStore()","import { makeAutoObservable, action, runInAction } from 'mobx'\r\n\r\ntype AnswerCallback = (() => void) | null\r\ninterface ICallModalStore {\r\n    isShow: boolean\r\n    title: string\r\n    description: string\r\n    onAccept: AnswerCallback\r\n    onReject: AnswerCallback\r\n    onClose: AnswerCallback\r\n}\r\n\r\nexport class CallModalStore implements ICallModalStore {\r\n    isShow = false\r\n    title = ''\r\n    description = ''\r\n    onAccept = null as AnswerCallback\r\n    onReject = null as AnswerCallback\r\n    onClose = null as AnswerCallback\r\n\r\n    constructor() {\r\n        makeAutoObservable(\r\n            this,\r\n            {\r\n                setData: action.bound,\r\n                setShow: action.bound,\r\n                reset: action.bound,\r\n            }\r\n        )\r\n    }\r\n\r\n    setData = (data: Partial<ICallModalStore>) => {\r\n        this.title = data.title || ''\r\n        this.description = data.description || ''\r\n        this.onAccept = data.onAccept || null\r\n        this.onReject = data.onReject || null\r\n        this.onClose = data.onClose || null\r\n    }\r\n\r\n    setShow = (val: boolean) => {\r\n        this.isShow = val\r\n    }\r\n\r\n    reset = () => {\r\n        this.title = ''\r\n        this.description = ''\r\n        this.onAccept = null\r\n        this.onReject = null\r\n        this.onClose = null\r\n    }\r\n\r\n    emptyRandom = () => {\r\n        this.setData({\r\n            title: 'Not found',\r\n            description: 'The list with available random persons is empty',\r\n        })\r\n        this.setShow(true)\r\n        setTimeout(() => {\r\n            this.setShow(false)\r\n            runInAction(this.reset)\r\n        }, 3500)\r\n    }\r\n}\r\n\r\nexport const callModalState = new CallModalStore()","import { makeAutoObservable, action } from 'mobx'\r\nimport { OfferData, OfferPerson } from 'services'\r\n\r\n\r\nclass CallStore {\r\n    offer: OfferData | null = null\r\n    isConnected: boolean = false\r\n    caller: OfferPerson | null = null\r\n    callee: OfferPerson | null = null\r\n\r\n    constructor() {\r\n        makeAutoObservable(\r\n            this,\r\n            {\r\n                setOffer: action.bound,\r\n                setIsConnected: action.bound,\r\n                setCaller: action.bound,\r\n                setCallee: action.bound,\r\n            }\r\n        )\r\n    }\r\n\r\n    setOffer = (data: OfferData | null) => {\r\n        this.offer = data\r\n    }\r\n\r\n    setIsConnected = (val: boolean) => {\r\n        this.isConnected = val\r\n    }\r\n\r\n    setCaller = (data: OfferPerson | null) => {\r\n        this.caller = data\r\n    }\r\n\r\n    setCallee = (data: OfferPerson | null) => {\r\n        this.callee = data\r\n    }\r\n}\r\n\r\nexport const callState = new CallStore()","import { CallType, CreateOfferData, IceCandidateData, OfferData, OfferDataStatus, OfferPerson, socketService } from 'services';\r\nimport { rootState } from 'store';\r\nimport { callModalTitleRequest } from 'utils';\r\nimport { DisconnectOptions } from './types';\r\n\r\nconst serversConfig: RTCConfiguration = {\r\n    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n}\r\n\r\nexport class RTCService {\r\n    localPeer: RTCPeerConnection | null = null\r\n    dataChannel: RTCDataChannel | null = null\r\n\r\n    setUpPeers = (callType: CallType) => {\r\n        this.localPeer = new RTCPeerConnection(serversConfig)\r\n\r\n        const handleConnectionChange = () => {\r\n            const status = this.localPeer?.connectionState\r\n            if (status === 'connected') {\r\n                rootState.call.setIsConnected(true)\r\n            } else if (status === 'disconnected' || status === 'failed') {\r\n                rootState.call.setIsConnected(false)\r\n            }\r\n            console.log('Peers connected!', this.localPeer?.connectionState)\r\n        }\r\n\r\n        const handleCandidate = (e: RTCPeerConnectionIceEvent) => {\r\n            const caller = rootState.call.caller\r\n            if (e.candidate && caller) {\r\n                console.log('handleCandidate', e);\r\n                const candidateData: IceCandidateData = {\r\n                    partnerId: caller.id,\r\n                    candidate: e.candidate,\r\n                }\r\n                socketService.sendIceCandidate(candidateData)\r\n            }\r\n        }\r\n\r\n        const handleDataChannel = (e: RTCDataChannelEvent) => {\r\n            this.dataChannel = e.channel\r\n            this.setUpDataChannel()\r\n        }\r\n\r\n        this.localPeer.addEventListener('icecandidate', handleCandidate)\r\n        this.localPeer.addEventListener('connectionstatechange', handleConnectionChange)\r\n        this.localPeer.addEventListener('datachannel', handleDataChannel)\r\n\r\n        if (callType === 'VIDEO_PERSONAL' || callType === 'VIDEO_RANDOM') {\r\n            this.setUpTracks()\r\n        }\r\n    }\r\n\r\n    setUpTracks = () => {\r\n        if (!this.localPeer) return null;\r\n        const localStream = rootState.media.localStream\r\n\r\n        const handleTrack = (e: RTCTrackEvent) => {\r\n            console.log('handleTrack', e)\r\n            rootState.media.remoteStream.addTrack(e.track)\r\n        }\r\n\r\n        this.localPeer.addEventListener('track', handleTrack)\r\n\r\n        localStream.getTracks().forEach(t => {\r\n            this.localPeer?.addTrack(t, localStream) as RTCRtpSender\r\n        })\r\n    }\r\n\r\n    switchScreenTracks = () => {\r\n        if (!this.localPeer) return null;\r\n        const media = rootState.media\r\n        if (media.isActiveScreen) {\r\n            const localStream = media.localStream\r\n            const senders = this.localPeer.getSenders()\r\n            const localVideoTrack = localStream.getVideoTracks()[0]\r\n            const videoSender = senders.find(s => s.track?.kind === localVideoTrack.kind)\r\n            if (videoSender) {\r\n                videoSender.replaceTrack(localVideoTrack)\r\n                media.setIsActiveScreen(false)\r\n            }\r\n        } else {\r\n            const screenStream = media.screenStream\r\n            const senders = this.localPeer.getSenders()\r\n            const screenVideoTrack = screenStream.getVideoTracks()[0]\r\n            const videoSender = senders.find(s => s.track?.kind === screenVideoTrack.kind)\r\n            if (videoSender) {\r\n                videoSender.replaceTrack(screenVideoTrack)\r\n                media.setIsActiveScreen(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    setUpDataChannel = () => {\r\n        if (!this.localPeer) {\r\n            return null;\r\n        }\r\n        console.log('setUpDataChannel');\r\n        if (!this.dataChannel) {\r\n            this.dataChannel = this.localPeer.createDataChannel('message')\r\n        }\r\n        this.dataChannel.addEventListener('open', () => {\r\n            console.log('open---')\r\n            rootState.ui.setOpenedTypeSidebar('messenger')\r\n        })\r\n        this.dataChannel.addEventListener('close', () => {\r\n            console.log('close---')\r\n            rootState.ui.setOpenedTypeSidebar('connect')\r\n        })\r\n        this.dataChannel.addEventListener('message', (e) => {\r\n            rootState.ui.addMessage({\r\n                text: e.data,\r\n                isOpposite: true,\r\n            })\r\n        })\r\n    }\r\n\r\n    sendMessage = (message: string) => {\r\n        if (!this.dataChannel) return null;\r\n        this.dataChannel.send(message)\r\n    }\r\n\r\n    createOffer = async ({ calleeId, callType, isRandom }: CreateOfferData) => {\r\n        try {\r\n            this.setUpPeers(callType)\r\n            this.setUpDataChannel()\r\n            const localPeer = this.localPeer as RTCPeerConnection\r\n\r\n            const cancel = () => {\r\n                this.disconnect()\r\n                socketService.sendDisconnect(calleeId)\r\n            }\r\n\r\n            rootState.callModal.setData({\r\n                title: isRandom ? 'Random calling' : 'Calling',\r\n                description: isRandom ? '' : `Callee Id: ${calleeId}`,\r\n                onClose: cancel,\r\n                onReject: cancel,\r\n            })\r\n            rootState.callModal.setShow(true)\r\n\r\n            const offer = await localPeer.createOffer()\r\n            await localPeer.setLocalDescription(offer)\r\n            socketService.sendOffer({\r\n                status: 'WAIT_ANSWER',\r\n                caller: {\r\n                    id: rootState.media.personalCode,\r\n                    sdp: localPeer.localDescription as RTCSessionDescription,\r\n                },\r\n                callee: {\r\n                    id: calleeId,\r\n                    sdp: null,\r\n                },\r\n                callType,\r\n            })\r\n        } catch (err) {\r\n            console.error('create offer error:', err)\r\n            rootState.callModal.setData({\r\n                title: 'Create offer error',\r\n                description: err + '',\r\n                onAccept: null,\r\n                onReject: null,\r\n            })\r\n        }\r\n    }\r\n\r\n    createRandomOffer = async (callType: CallType, prevRandomCalleeId: string = '') => {\r\n        socketService.sendRandomOffer({\r\n            calleeId: '',\r\n            isRandom: true,\r\n            callType,\r\n            prevRandomCalleeId,\r\n        })\r\n    }\r\n\r\n    handleOffer = async (data: OfferData) => {\r\n        const isConnected = rootState.call.isConnected\r\n        const isRandomCall = data.callType === 'VIDEO_RANDOM' || data.callType === 'CHAT_RANDOM'\r\n\r\n        const decline = (status: OfferDataStatus) => () => {\r\n            socketService.sendAnswer({\r\n                ...data,\r\n                status,\r\n            })\r\n        }\r\n        if (isConnected && isRandomCall) {\r\n            decline('BUSY_RANDOM')()\r\n        } else if (!rootState.ui.allowRandomConnect && isRandomCall) {\r\n            decline('NOT_ALLOWED_RANDOM')()\r\n        } else if (isConnected) {\r\n            decline('BUSY')()\r\n        } else {\r\n            rootState.callModal.setData({\r\n                title: callModalTitleRequest(data.callType),\r\n                onClose: decline('REJECTED'),\r\n                onAccept: () => this.acceptOffer(data),\r\n                onReject: decline('REJECTED'),\r\n            })\r\n            rootState.callModal.setShow(true)\r\n        }\r\n    }\r\n\r\n    acceptOffer = async (data: OfferData) => {\r\n        try {\r\n            this.setUpPeers(data.callType)\r\n\r\n            console.log('handled offer', data);\r\n            if (this.localPeer && data.caller.sdp) {\r\n                const call = rootState.call\r\n                this.localPeer.setRemoteDescription(data.caller.sdp)\r\n                const answer = await this.localPeer.createAnswer()\r\n                this.localPeer.setLocalDescription(answer)\r\n                call.setCaller(data.caller)\r\n                call.setCallee({\r\n                    ...data.callee,\r\n                    sdp: answer\r\n                })\r\n                const answerWithCalleeSDP: OfferData = {\r\n                    ...data,\r\n                    status: 'ACCEPTED',\r\n                    callee: call.callee as OfferPerson\r\n                }\r\n                socketService.sendAnswer(answerWithCalleeSDP)\r\n            }\r\n        } catch (err) {\r\n            console.error('handle offer error:', err)\r\n        }\r\n    }\r\n\r\n    handleAnswer = async (data: OfferData) => {\r\n        try {\r\n            console.log('sdp answer', data)\r\n            if (data.status === 'BUSY_RANDOM' || data.status === 'NOT_ALLOWED_RANDOM') {\r\n                this.disconnect({ resetModal: false })\r\n                this.createRandomOffer(data.callType, data.callee.id)\r\n                return null;\r\n            }\r\n            if (this.localPeer && data.callee.sdp && data.status === 'ACCEPTED') {\r\n                const call = rootState.call\r\n                call.setCaller(data.caller)\r\n                call.setCallee(data.callee)\r\n                await this.localPeer.setRemoteDescription(data.callee.sdp)\r\n                rootState.callModal.setShow(false)\r\n            } else {\r\n                let title = ''\r\n                if (data.status === 'REJECTED') title = 'Call has been rejected'\r\n                if (data.status === 'BUSY') title = 'Callee is busy'\r\n                rootState.callModal.reset()\r\n                rootState.callModal.setData({ title })\r\n                setTimeout(() => {\r\n                    this.disconnect()\r\n                    rootState.callModal.setShow(false)\r\n                }, 1500)\r\n            }\r\n        } catch (err) {\r\n            console.error('SDP handleAnswer errror:', err)\r\n        }\r\n    }\r\n\r\n    handleIceCandidate = async (data: IceCandidateData) => {\r\n        try {\r\n            await this.localPeer?.addIceCandidate(data.candidate)\r\n        } catch (err) {\r\n            console.log('handleIceCandidate error:', err)\r\n        }\r\n    }\r\n\r\n    disconnect = (options: DisconnectOptions = {}) => {\r\n        const {\r\n            resetModal = true,\r\n        } = options\r\n\r\n        const call = rootState.call\r\n        rootState.call.setIsConnected(false)\r\n        this.localPeer?.close()\r\n        this.dataChannel?.close()\r\n        this.localPeer = null\r\n        this.dataChannel = null\r\n        rootState.media.resetRemoteStream()\r\n        rootState.media.setIsActiveScreen(false)\r\n        rootState.ui.cleanMessages()\r\n        call.setCaller(null)\r\n        call.setCallee(null)\r\n        if (resetModal) {\r\n            rootState.callModal.setShow(false)\r\n            rootState.callModal.reset()\r\n        }\r\n    }\r\n\r\n    sendDisconnect = () => {\r\n        const callerId = rootState.call.caller?.id\r\n        const calleeId = rootState.call.callee?.id\r\n        const isCaller = rootState.media.personalCode === callerId\r\n        if (isCaller) {\r\n            socketService.sendDisconnect(calleeId || '')\r\n        } else {\r\n            socketService.sendDisconnect(callerId || '')\r\n        }\r\n    }\r\n}\r\n\r\nexport const rtcService = new RTCService()","\r\n\r\nclass RecordService {\r\n    recorder: MediaRecorder | null = null\r\n    buffer: Blob[] = []\r\n\r\n    recordStream = (stream: MediaStream) => {\r\n        const options: MediaRecorderOptions  = {mimeType: 'video/webm; codecs=vp9'}\r\n        this.recorder = new MediaRecorder(stream, options)\r\n        this.initListeners()\r\n        this.recorder.start(500)\r\n        console.log(this.recorder);\r\n    }\r\n\r\n    pause = () => {\r\n        if (!this.recorder) return null;\r\n        this.recorder.pause()\r\n    }\r\n\r\n    resume = () => {\r\n        if (!this.recorder) return null;\r\n        this.recorder.resume()\r\n    }\r\n\r\n    stopRecording = () => {\r\n        this.recorder?.stop()\r\n        setTimeout(() => {\r\n            this.download()\r\n            this.buffer = []\r\n            this.recorder = null\r\n        }, 1500)\r\n    }\r\n\r\n    download = () => {\r\n        const blob = new Blob(this.buffer, {type: 'video/webm'})\r\n        const url = URL.createObjectURL(blob)\r\n        const a = document.createElement('a')\r\n        a.href = url\r\n        a.download = 'Record'\r\n        a.target = '_blank'\r\n        a.click()\r\n    }\r\n\r\n    initListeners = () => {\r\n        if (!this.recorder) return null;\r\n        this.recorder.ondataavailable = (e: BlobEvent) => {\r\n            if (e.data.size > 0) {\r\n                this.buffer.push(e.data)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const recordService = new RecordService()","export * from './TextInput.types'\r\nexport { TextInput } from './TextInput'","export * from './Checkbox.types'\r\nexport { Checkbox } from './Checkbox'","export * from './Button.types'\r\nexport { Button } from './Button'","export * from './CallControl.types'\r\nexport { CallControl } from './CallControl'","import { BREAKPOINTS, COLORS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    position: absolute;\r\n    display: grid;\r\n    max-width: 180px;\r\n    max-height: 360px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    left: 20px;\r\n    top: 20px;\r\n    border-radius: 12px;\r\n    border: 2px solid ${COLORS.WHITE};\r\n    overflow: hidden;\r\n    z-index: 2;\r\n\r\n    .video {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        left: 10px;\r\n        top: 10px;\r\n    }\r\n`","import { LocalVideoProps } from \"./LocalVideo.types\"\r\nimport { Wrapper } from './LocalVideo.styled'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from 'store'\r\nimport { useEffect, useRef } from 'react'\r\n\r\nexport const LocalVideo: React.FC<LocalVideoProps> = observer((props) => {\r\n\r\n    const media = rootState.media\r\n    const videoRef = useRef<HTMLVideoElement>(null)\r\n\r\n    const hasLocalVideo = Boolean(media.localStream.getVideoTracks()[0])\r\n\r\n    useEffect(() => {\r\n        media.receiveLocalStream()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const video = videoRef.current\r\n        if (video) {\r\n            video.srcObject = media.isActiveScreen ? media.screenStream : media.localStream\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [media.localStream, media.isActiveScreen])\r\n\r\n    return (\r\n        <Wrapper>\r\n            {\r\n                hasLocalVideo &&\r\n                <video\r\n                    className=\"video\"\r\n                    ref={videoRef}\r\n                    loop\r\n                    muted\r\n                    autoPlay\r\n                    {...props}\r\n                />\r\n            }\r\n        </Wrapper>\r\n    )\r\n})","import styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    position: absolute;\r\n    display: grid;\r\n    width: 100%;\r\n    height: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    left: 0;\r\n    top: 0;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const Video = styled.video`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n`","import { Logo } from 'components'\r\nimport { Wrapper } from './Placeholder.styled'\r\n\r\nexport const Placeholder: React.FC<{}> = () => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Logo />\r\n        </Wrapper>\r\n    )\r\n}","import { BREAKPOINTS, COLORS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    position: absolute;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-auto-flow: column;\r\n    gap: 30px;\r\n    padding: 20px;\r\n    right: 20px;\r\n    top: 20px;\r\n\r\n    border-radius: 8px;\r\n    background-color: ${COLORS.BLACK_LITE};\r\n    z-index: 2;\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        top: 80px;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        padding: 10px 15px;\r\n        gap: 30px;\r\n        right: 10px;\r\n        top: 70px;\r\n    }\r\n`\r\n\r\nexport const Control = styled.div`\r\n    display: grid;\r\n    border: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${COLORS.WHITE};\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        font-size: 14px;\r\n    }\r\n`","import { Control, Wrapper } from './RecordControls.styled'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from 'store'\r\nimport { recordService } from 'services'\r\nimport { useEffect } from 'react'\r\n\r\nexport const RecordControls: React.FC<{}> = observer(() => {\r\n\r\n    const media = rootState.media\r\n    const call = rootState.call\r\n\r\n    const handlePause = () => {\r\n        recordService.pause()\r\n        media.setIsRecordingStreamPause(true)\r\n    }\r\n\r\n    const handleResume = () => {\r\n        recordService.resume()\r\n        media.setIsRecordingStreamPause(false)\r\n    }\r\n\r\n    const handleStop = () => {\r\n        recordService.stopRecording()\r\n        media.setIsRecordingStream(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!call.isConnected && media.isRecordingStream) {\r\n            handleStop()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [call.isConnected])\r\n\r\n    if (!media.isRecordingStream) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            {\r\n                media.isRecordingStreamPause\r\n                    ? <Control onClick={handleResume}>\r\n                        <i className=\"fa fa-play\" />\r\n                    </Control>\r\n                    : <Control onClick={handlePause}>\r\n                        <i className=\"fa fa-pause\" />\r\n                    </Control>\r\n            }\r\n            <Control onClick={handleStop}>\r\n                <i className=\"fa fa-stop\" />\r\n            </Control>\r\n        </Wrapper>\r\n    )\r\n})","import styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    position: absolute;\r\n    display: grid;\r\n    width: 100%;\r\n    height: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    left: 0;\r\n    top: 0;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n\r\n    .video {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n`","import { RemoteVideoProps } from \"./RemoteVideo.types\"\r\nimport { Wrapper } from './RemoteVideo.styled'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from 'store'\r\nimport { useEffect, useRef } from 'react'\r\n\r\nexport const RemoteVideo: React.FC<RemoteVideoProps> = observer(() => {\r\n\r\n    const media = rootState.media\r\n    const call = rootState.call\r\n\r\n    const videoRef = useRef<HTMLVideoElement>(null)\r\n\r\n    const hasRemoteVideo = Boolean(media.remoteStream.getVideoTracks()[0])\r\n\r\n    useEffect(() => {\r\n        const video = videoRef.current\r\n        if (video) {\r\n            video.srcObject = media.remoteStream\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [call.isConnected])\r\n\r\n    return (\r\n        <Wrapper>\r\n            {\r\n                hasRemoteVideo &&\r\n                <video\r\n                    className=\"video\"\r\n                    ref={videoRef}\r\n                    loop\r\n                    muted\r\n                    autoPlay\r\n                />\r\n            }\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    position: absolute;\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    right: 20px;\r\n    top: 20px;\r\n    z-index: 2;\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        display: grid;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        right: 10px;\r\n        top: 10px;\r\n    }\r\n`","import { CallControl } from 'components'\r\nimport { Wrapper } from './SidebarBtn.styled'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from 'store'\r\n\r\nexport const SidebarBtn: React.FC<{}> = observer(() => {\r\n\r\n    const handleClick = () => {\r\n        rootState.ui.setOpenedSidebar(true)\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <CallControl onClick={handleClick}>\r\n                <i className=\"fa fa-bars\" />\r\n            </CallControl>\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    width: 100%;\r\n    margin: auto 0 20px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-auto-flow: column;\r\n    gap: 20px;\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        gap: 10px;\r\n\r\n        .icon {\r\n            font-size: 14px;\r\n        }\r\n\r\n        .icon-large {\r\n            font-size: 22px;\r\n        }\r\n    }\r\n`","import { ViewControlsProps } from \"./ViewControls.types\"\r\nimport { CallControl } from '@Components'\r\nimport { Wrapper } from './ViewControls.styled'\r\nimport { useState } from \"react\"\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from 'store'\r\nimport { recordService, rtcService } from 'services'\r\nimport { hasTrack } from 'utils'\r\n\r\nexport const ViewControls: React.FC<ViewControlsProps> = observer(() => {\r\n\r\n    const media = rootState.media\r\n    const [activeMicro, setActiveMicro] = useState(true)\r\n\r\n    const switchTrack = (kind: MediaStreamTrack['kind']) => {\r\n        media.localStream.getTracks().forEach(track => {\r\n            if (track.kind === kind) {\r\n                track.enabled = !track.enabled\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleMicro = () => {\r\n        setActiveMicro(!activeMicro)\r\n        switchTrack('audio')\r\n    }\r\n\r\n    const handleVideo = () => {\r\n        switchTrack('video')\r\n    }\r\n\r\n    const handleHangUp = () => {\r\n        rtcService.sendDisconnect()\r\n        rtcService.disconnect()\r\n    }\r\n\r\n    const handleChangeLocalStream = async () => {\r\n        if (!media.isActiveScreen) {\r\n            await media.captureScreen()\r\n        }\r\n        rtcService.switchScreenTracks()\r\n    }\r\n\r\n    const handleRecord = () => {\r\n        if (!media.isRecordingStream) {\r\n            media.setIsRecordingStream(true)\r\n            recordService.recordStream(media.remoteStream)\r\n        } else {\r\n            recordService.stopRecording()\r\n            media.setIsRecordingStream(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            {\r\n                hasTrack(media.remoteStream, 'audio') &&\r\n                <CallControl onClick={handleMicro}>\r\n                    <i className={`fa fa-microphone${activeMicro ? '' : \"-slash\"} icon`} />\r\n                </CallControl>\r\n            }\r\n            {\r\n                hasTrack(media.remoteStream, 'video') &&\r\n                <CallControl onClick={handleVideo}>\r\n                    <i className=\"fa fa-camera icon\"></i>\r\n                </CallControl>\r\n            }\r\n            <CallControl\r\n                size=\"large\"\r\n                color=\"red\"\r\n                onClick={handleHangUp}\r\n            >\r\n                <i className=\"fa fa-phone icon-large\"></i>\r\n            </CallControl>\r\n            <CallControl onClick={handleChangeLocalStream}>\r\n                <i className=\"fa fa-desktop icon\"></i>\r\n            </CallControl>\r\n            {\r\n                hasTrack(media.remoteStream, 'video') &&\r\n                <CallControl\r\n                    fontColor={media.isRecordingStream ? 'red' : undefined}\r\n                    onClick={handleRecord}\r\n                >\r\n                    <i className=\"fa fa-bullseye icon\"></i>\r\n                </CallControl>\r\n            }\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS, COLORS } from 'assets';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    margin: 0 10px 0 0;\r\n    border-radius: 24px;\r\n    background: linear-gradient(0deg, ${COLORS.GREEN_DARK}, ${COLORS.GREEN_BRIGHT});\r\n    overflow: hidden;\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        border-radius: 0;\r\n        margin: 0;\r\n    }\r\n`","import React from 'react'\r\nimport { LocalVideo } from './components/LocalVideo/LocalVideo'\r\nimport { Placeholder } from './components/Placeholder'\r\nimport { RecordControls } from './components/RecordControls'\r\nimport { RemoteVideo } from './components/RemoteVideo'\r\nimport { SidebarBtn } from './components/SidebarBtn'\r\nimport { ViewControls } from './components/ViewControls'\r\nimport { Wrapper } from './View.styled'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from 'store'\r\n\r\nexport const View: React.FC<{}> = observer(() => {\r\n\r\n    const call = rootState.call\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SidebarBtn />\r\n            <RecordControls />\r\n            <LocalVideo />\r\n            <Placeholder />\r\n            {\r\n                call.isConnected && <>\r\n                    <RemoteVideo />\r\n                    <ViewControls />\r\n                </>\r\n            }\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS, COLORS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n`\r\n\r\nexport const SwitchButton = styled.button<{ active: boolean }>`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: none;\r\n    background-color: ${COLORS.GREEN_DARK};\r\n    color: ${COLORS.WHITE};\r\n    opacity: 0.5;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n\r\n    filter: ${p => p.active\r\n        ? \"brightness(1)\"\r\n        : \"brightness(0.7)\"\r\n    };\r\n\r\n    &:first-child {\r\n        border-right: 1px solid ${COLORS.WHITE};\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(1);\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        opacity: 1;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        font-size: 18px;\r\n    }\r\n`","import { BarSwitcherProps } from \"./BarSwitcher.types\"\r\nimport { SwitchButton, Wrapper } from './BarSwitcher.styled'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from \"store\"\r\n\r\nexport const BarSwitcher: React.FC<BarSwitcherProps> = observer(() => {\r\n    const uiState = rootState.ui\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SwitchButton\r\n                active={uiState.openedTypeSidebar === \"connect\"}\r\n                onClick={() => uiState.setOpenedTypeSidebar(\"connect\")}\r\n            >\r\n                <i className=\"fa fa-users\" />\r\n            </SwitchButton>\r\n            <SwitchButton\r\n                active={uiState.openedTypeSidebar === \"messenger\"}\r\n                onClick={() => uiState.setOpenedTypeSidebar(\"messenger\")}\r\n            >\r\n                <i className=\"fa fa-paper-plane-o\" />\r\n            </SwitchButton>\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS, COLORS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    padding: 20px;\r\n    color: ${COLORS.WHITE};\r\n    background: linear-gradient(0deg, ${COLORS.GREEN_DARK}, ${COLORS.GREEN_BRIGHT});\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    overflow: auto;\r\n\r\n    .connect-bar-checkbox {\r\n        margin-top: auto;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        padding: 10px;\r\n    }\r\n`\r\n\r\nexport const LogoWrapper = styled.div`\r\n    display: grid;\r\n    justify-items: flex-end;\r\n    margin: 0 0 60px;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    font-size: 14px;\r\n    word-break: break-all;\r\n`\r\n\r\nexport const TextBold = styled(Text)`\r\n    font-weight: bold;\r\n`\r\n\r\nexport const FirstText = styled(Text)`\r\n    margin-bottom: 20px;\r\n`\r\n\r\nexport const CodeArea = styled.div`\r\n    display: grid;\r\n    padding: 15px;\r\n    background-color: ${COLORS.WHITE_EXTA_LITE};\r\n    border-radius: 12px;\r\n    align-items: center;\r\n    gap: 15px 10px;\r\n    grid-template-columns: 1fr auto;\r\n    grid-template-areas:\r\n    \"text .\"\r\n    \"bold-text btn\";\r\n\r\n    ${Text} {\r\n        grid-area: text;\r\n    }\r\n\r\n    ${TextBold} {\r\n        grid-area: bold-text;\r\n    }\r\n\r\n    button {\r\n        grid-area: btn;\r\n    }\r\n`\r\n\r\nexport const CallArea = styled.div`\r\n    display: grid;\r\n    margin: 25px 0 15px;\r\n    gap: 15px 10px;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    ${Text}, .connect-bar-input {\r\n        grid-column: 1 / 3;\r\n    }\r\n\r\n    .connect-bar-btn-icon {\r\n        display: inline-block;\r\n        margin-right: 10px;\r\n    }\r\n`","import { ConnectBarProps } from \"./ConnectBar.types\"\r\nimport { LogoWrapper, Wrapper, Text, TextBold, CodeArea, FirstText, CallArea } from './ConnectBar.styled'\r\nimport { Button, Checkbox, Logo, TextInput } from \"components\"\r\nimport { useState } from \"react\"\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from 'store'\r\nimport { CallType, CreateOfferData, rtcService } from 'services'\r\n\r\nexport const ConnectBar: React.FC<ConnectBarProps> = observer(() => {\r\n\r\n    const personalCode = rootState.media.personalCode\r\n    const isConnected = rootState.call.isConnected\r\n    const ui = rootState.ui\r\n\r\n    const [connectCode, setConnectCode] = useState('')\r\n\r\n    const handleCopyCode = () => {\r\n        window.navigator.clipboard.writeText(personalCode)\r\n    }\r\n\r\n    const handleCall = (callType: CreateOfferData['callType']) => () => {\r\n        if (!connectCode) return null;\r\n        const data: CreateOfferData = {\r\n            calleeId: connectCode,\r\n            callType,\r\n        }\r\n        rtcService.createOffer(data)\r\n    }\r\n\r\n    const handleRandomCall = (callType: CallType) => () => {\r\n        rtcService.createRandomOffer(callType)\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <LogoWrapper>\r\n                <Logo size=\"small\" />\r\n            </LogoWrapper>\r\n\r\n            <FirstText>\r\n                Talk with other user by passing his personal code or talk with random person!\r\n            </FirstText>\r\n\r\n            <CodeArea>\r\n                <Text>Your personal code</Text>\r\n                <TextBold>{personalCode}</TextBold>\r\n                <Button\r\n                    textColor=\"gold\"\r\n                    onClick={handleCopyCode}\r\n                >\r\n                    <i className=\"fa fa-clone\" />\r\n                </Button>\r\n            </CodeArea>\r\n\r\n            <CallArea>\r\n                <Text>Personal code</Text>\r\n                <TextInput\r\n                    className=\"connect-bar-input\"\r\n                    design=\"opacity\"\r\n                    value={connectCode}\r\n                    disabled={isConnected}\r\n                    onChange={e => setConnectCode(e.target.value)}\r\n                />\r\n                <Button\r\n                    className=\"connect-bar-btn\"\r\n                    disabled={isConnected}\r\n                    onClick={handleCall('CHAT_PERSONAL')}\r\n                >\r\n                    <i className=\"fa fa-comment-o connect-bar-btn-icon\" />\r\n                    Chat\r\n                </Button>\r\n                <Button\r\n                    textColor=\"gold\"\r\n                    disabled={isConnected}\r\n                    onClick={handleCall('VIDEO_PERSONAL')}\r\n                >\r\n                    <i className=\"fa fa-video-camera connect-bar-btn-icon\" />\r\n                    Video\r\n                </Button>\r\n            </CallArea>\r\n\r\n            <CallArea>\r\n                <Text>Random person</Text>\r\n                <Button\r\n                    className=\"connect-bar-btn\"\r\n                    disabled={isConnected}\r\n                    onClick={handleRandomCall('CHAT_RANDOM')}\r\n                >\r\n                    <i className=\"fa fa-comment-o connect-bar-btn-icon\" />\r\n                    Chat\r\n                </Button>\r\n                <Button\r\n                    textColor=\"gold\"\r\n                    disabled={isConnected}\r\n                    onClick={handleRandomCall('VIDEO_RANDOM')}\r\n                >\r\n                    <i className=\"fa fa-video-camera connect-bar-btn-icon\" />\r\n                    Video\r\n                </Button>\r\n            </CallArea>\r\n\r\n            <Checkbox\r\n                id=\"allow-random-checkbox\"\r\n                className=\"connect-bar-checkbox\"\r\n                checked={ui.allowRandomConnect}\r\n                disabled={isConnected}\r\n                onChange={() => ui.setAllowRandomConnect(!ui.allowRandomConnect)}\r\n            >\r\n                <Text>Allow connection from random</Text>\r\n            </Checkbox>\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS, COLORS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n    padding: 20px 0 20px 20px;\r\n    background-color: ${COLORS.GREEN_SHINE};\r\n\r\n    .message-bar-send-btn {\r\n        position: relative;\r\n        top: -1px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        padding: 10px 0 10px 10px;\r\n    }\r\n`\r\n\r\nexport const MessageList = styled.div`\r\n    display: grid;\r\n    height: calc(100% - 50px);\r\n    padding: 0 20px 60px 0;\r\n    align-content: flex-start;\r\n    overflow: auto;\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        padding: 0 10px 50px 0;\r\n    }\r\n`\r\n\r\nexport const Message = styled.div<{ opposite: boolean }>`\r\n    max-width: 90%;\r\n    margin: 15px 0 15px 0;\r\n    padding: 15px;\r\n    color: ${p => p.opposite ? COLORS.BLACK : COLORS.WHITE};\r\n    background: ${p => p.opposite\r\n        ? COLORS.WHITE\r\n        : `linear-gradient(0deg, ${COLORS.GREEN_DARK}, ${COLORS.GREEN_BRIGHT})`\r\n    };\r\n    border-radius: ${p => p.opposite\r\n        ? '6px 6px 6px 0px'\r\n        : '6px 6px 0px 6px'\r\n    };\r\n    margin-left: ${p => p.opposite\r\n        ? '0px'\r\n        : 'auto'\r\n    };\r\n`\r\n\r\nexport const InputField = styled.div`\r\n    position: absolute;\r\n    left: 20px;\r\n    right: 20px;\r\n    bottom: 20px;\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        left: 10px;\r\n        right: 10px;\r\n        bottom: 10px;\r\n    }\r\n`","import { MessengerBarProps } from \"./MessengerBar.types\"\r\nimport { InputField, Message, MessageList, Wrapper, } from './MessengerBar.styled'\r\nimport { Button, TextInput } from \"components\"\r\nimport { useState } from 'react'\r\nimport { rtcService } from 'services'\r\nimport { rootState } from 'store'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nexport const MessengerBar: React.FC<MessengerBarProps> = observer(() => {\r\n\r\n    const messages = rootState.ui.messages\r\n    const isConnected = rootState.call.isConnected\r\n\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    const handleSend = () => {\r\n        if (!message || !isConnected) return null;\r\n        rtcService.sendMessage(message)\r\n        rootState.ui.addMessage({\r\n            text: message,\r\n            isOpposite: false,\r\n        })\r\n        setMessage('')\r\n    }\r\n\r\n    const handleKey = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') handleSend()\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MessageList>\r\n                {\r\n                    messages.map(m => (\r\n                        <Message\r\n                            key={Math.random()}\r\n                            opposite={m.isOpposite}\r\n                        >\r\n                            {m.text}\r\n                        </Message>\r\n                    ))\r\n                }\r\n            </MessageList>\r\n            <InputField>\r\n                <TextInput\r\n                    value={message}\r\n                    design=\"default\"\r\n                    postfix={\r\n                        <Button\r\n                            textColor=\"gold\"\r\n                            className=\"message-bar-send-btn\"\r\n                            onClick={handleSend}\r\n                        >\r\n                            <i className=\"fa fa-paper-plane-o\" />\r\n                        </Button>\r\n                    }\r\n                    onKeyDown={handleKey}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </InputField>\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS, COLORS} from '@Assets';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst switcherHeight = 60;\r\nconst switcherHeightSmall = 40;\r\n\r\nexport const Wrapper = styled.div<{ opened: boolean }>`\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 3;\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        left: 0;\r\n\r\n        ${openedSidebar}\r\n    }\r\n`\r\n\r\nexport const Body = styled.div<{ opened: boolean }>`\r\n    display: grid;\r\n    grid-template-rows: calc(100% - ${switcherHeight}px) ${switcherHeight}px;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 24px;\r\n    overflow: hidden;\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        position: absolute;\r\n        max-width: 85%;\r\n        top: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        border-radius: 24px 0 0 24px;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.XS}px) {\r\n        max-width: 320px;\r\n        grid-template-rows: calc(100% - ${switcherHeightSmall}px) ${switcherHeightSmall}px;\r\n    }\r\n`\r\n\r\nexport const Background = styled.div`\r\n    display: none;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    background-color: ${COLORS.BLACK};\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        display: block;\r\n        max-width: 320px;\r\n    }\r\n`\r\n\r\nexport const CloseSidebar = styled.div`\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n`\r\n\r\nfunction openedSidebar(p: { opened: boolean }) {\r\n    if (p.opened) return css`\r\n        display: block;\r\n\r\n        ${Background} {\r\n            opacity: .3;\r\n        }\r\n\r\n        ${Body} {\r\n            transform: translate(0px, 0px);\r\n        }\r\n    `\r\n\r\n    return css`\r\n        display: none;\r\n\r\n        ${Background} {\r\n            opacity: 0;\r\n        }\r\n\r\n        ${Body} {\r\n            transform: translate(-150%, 0px);\r\n        }\r\n    `\r\n}","import React from 'react'\r\nimport { BarSwitcher } from './components/BarSwitcher/BarSwitcher'\r\nimport { ConnectBar } from './components/ConnectBar/ConnectBar'\r\nimport { MessengerBar } from './components/MessengerBar'\r\nimport { Body, Wrapper, Background } from './Sidebar.styled'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rootState } from '@Store'\r\n\r\nexport const Sidebar: React.FC<{}> = observer(() => {\r\n    const uiState = rootState.ui\r\n\r\n    return (\r\n        <Wrapper opened={uiState.openedSideBar}>\r\n            <Background onClick={() => uiState.setOpenedSidebar(false)} />\r\n            <Body opened={uiState.openedSideBar}>\r\n                {\r\n                    uiState.openedTypeSidebar === \"connect\" &&\r\n                    <ConnectBar />\r\n                }\r\n                {\r\n                    uiState.openedTypeSidebar === \"messenger\" &&\r\n                    <MessengerBar />\r\n                }\r\n                <BarSwitcher />\r\n            </Body>\r\n        </Wrapper>\r\n    )\r\n})","import { BREAKPOINTS, COLORS } from \"assets\";\r\nimport styled from \"styled-components\";\r\n\r\ntype ControlProps = { reject?: boolean }\r\n\r\nexport const Wrapper = styled.div`\r\n    position: fixed;\r\n    display: grid;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    grid-template-columns: 20px minmax(200px, 500px) 20px;\r\n    z-index: 1000;\r\n\r\n`\r\n\r\nexport const Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: ${COLORS.BLACK_LITE};\r\n`\r\n\r\nexport const Body = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    max-height: 90vh;\r\n    width: 100%;\r\n    padding: 40px 30px;\r\n    grid-column: 2 / 3;\r\n    border-radius: 18px;\r\n    overflow-y: auto;\r\n\r\n    background-color: ${COLORS.WHITE};\r\n\r\n    @media (max-width: ${BREAKPOINTS.S}px) {\r\n        padding: 20px 10px;\r\n    }\r\n`\r\n\r\nexport const Title = styled.p`\r\n    width: 100%;\r\n    margin: 0 0 40px;\r\n    font-size: 32px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    word-break: break-word;\r\n\r\n    @media (max-width: ${BREAKPOINTS.S}px) {\r\n        margin: 0 0 20px;\r\n        font-size: 24px;\r\n    }\r\n`\r\n\r\nexport const Description = styled.p`\r\n    width: 100%;\r\n    margin: 0 0 40px;\r\n    font-size: 28px;\r\n    text-align: center;\r\n    word-break: break-word;\r\n\r\n    @media (max-width: ${BREAKPOINTS.S}px) {\r\n        margin: 20px 0;\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nexport const IconWrapper = styled.div`\r\n    position: relative;\r\n    height: 0;\r\n    width: 70%;\r\n    margin: 0 0 40px;\r\n    padding-bottom: 70%;\r\n    display: grid;\r\n    justify-content: center;\r\n    align-items: center;\r\n    justify-self: center;\r\n    font-size: 140px;\r\n    border-radius: 50%;\r\n    color: ${COLORS.WHITE};\r\n    background: linear-gradient(0deg, ${COLORS.GREEN_DARK}, ${COLORS.GREEN_BRIGHT});\r\n\r\n    .icon {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.S}px) {\r\n        width: 80%;\r\n        padding-bottom: 80%;\r\n        font-size: 25vw;\r\n    }\r\n`\r\n\r\nexport const ControlsWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (max-width: ${BREAKPOINTS.S}px) {\r\n        flex-wrap: wrap;\r\n    }\r\n`\r\n\r\nexport const Control = styled.button<ControlProps>`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 15px 10px;\r\n    text-align: center;\r\n    border-radius: 8px;\r\n    font-size: 26px;\r\n    color: ${COLORS.WHITE};\r\n    background-color: ${p => p.reject ? COLORS.DANGER : COLORS.GREEN};\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(0.7);\r\n    }\r\n\r\n    &:not(:last-child) {\r\n        margin-right: 15px;\r\n    }\r\n\r\n    .icon {\r\n        font-size: 32px;\r\n        margin-right: 15px;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.S}px) {\r\n        font-size: 22px;\r\n\r\n        &:not(:last-child) {\r\n            margin-right: 0;\r\n            margin-bottom: 15px;\r\n        }\r\n\r\n        .icon {\r\n            font-size: 26px;\r\n        }\r\n    }\r\n`","import { Wrapper, Body, Title, IconWrapper, Description, Control, ControlsWrapper, Background } from \"./CallModal.styles\";\r\nimport { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { rootState } from 'store';\r\n\r\n\r\nexport const CallModal: React.FC<{}> = observer(() => {\r\n    const {\r\n        isShow,\r\n        title,\r\n        description,\r\n        onClose,\r\n        onAccept,\r\n        onReject,\r\n        setShow,\r\n    } = rootState.callModal\r\n\r\n    const handleAccept = () => {\r\n        if (onAccept) onAccept()\r\n        setShow(false)\r\n    }\r\n\r\n    const handleReject = () => {\r\n        if (onReject) onReject()\r\n        setShow(false)\r\n    }\r\n\r\n    const handleBackgroundClick = () => {\r\n        if (onClose) onClose()\r\n        setShow(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const keyHandler = (e: KeyboardEvent) => {\r\n            if (e.key !== 'Escape') return null;\r\n            if (onClose) onClose()\r\n        }\r\n        document.addEventListener('keydown', keyHandler)\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', keyHandler)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if (!isShow) return null\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Background onClick={handleBackgroundClick} />\r\n            <Body>\r\n                <Title>{title}</Title>\r\n                <IconWrapper>\r\n                    <i className=\"fa fa-user-circle-o icon\" />\r\n                </IconWrapper>\r\n\r\n                {description && (\r\n                    <Description>{description}</Description>\r\n                )}\r\n\r\n                <ControlsWrapper>\r\n                    {onAccept && (\r\n                        <Control onClick={handleAccept}>\r\n                            <i className=\"fa fa-phone icon\" />\r\n                            Accept\r\n                        </Control>\r\n                    )}\r\n                    {onReject && (\r\n                        <Control\r\n                            reject={true}\r\n                            onClick={handleReject}\r\n                        >\r\n                            <i className=\"fa fa-times icon\" />\r\n                            Reject\r\n                        </Control>\r\n                    )}\r\n                </ControlsWrapper>\r\n            </Body>\r\n        </Wrapper>\r\n    )\r\n})\r\n","import { COLORS } from \"assets\";\r\nimport styled from \"styled-components\";\r\nimport { LogoProps } from \"./Logo.types\";\r\n\r\n\r\nexport const Text = styled.p<LogoProps>`\r\n    margin: 0;\r\n    font-size: 54px;\r\n    font-weight: bold;\r\n    color: transparent;\r\n    background-image: linear-gradient(120deg, ${COLORS.WHITE}, ${COLORS.WHITE_EXTA_LITE});\r\n    -webkit-background-clip: text;\r\n\r\n    ${p => p.size === \"small\" && \"font-size: 36px;\"}\r\n`","import { Text } from './Logo.styled'\r\nimport { LogoProps } from './Logo.types'\r\n\r\nexport const Logo: React.FC<LogoProps> = (props) => {\r\n\r\n    return (\r\n        <Text {...props}>\r\n            RTC<br/>Chat\r\n        </Text>\r\n    )\r\n}","export * from './types'\r\nexport { socketService } from './SocketService'\r\nexport { rtcService } from './RTCService'\r\nexport { recordService } from './RecordService'","import { BREAKPOINTS } from 'assets/styles/constants';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const Layout = styled.div`\r\n    display: grid;\r\n\theight: 100vh;\r\n    width: 100%;\r\n    padding: 10px;\r\n    grid-template-columns: 1fr 480px;\r\n    grid-template-rows: calc(100vh - 20px);\r\n\r\n    @media (max-width: ${BREAKPOINTS.XXL}px) {\r\n        grid-template-columns: 1fr 420px;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.L}px) {\r\n        grid-template-columns: 1fr 320px;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.M}px) {\r\n        // Position fixed\r\n        padding: 0px;\r\n        grid-template-columns: 1fr;\r\n        grid-template-rows: 100vh;\r\n    }\r\n`\r\n\r\nexport const Container = styled.div`\r\n    max-width: 1400px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: ${BREAKPOINTS.XXL}px) {\r\n        max-width: 100%;\r\n    }\r\n`","import React from 'react'\r\nimport { Container, Layout } from './AppLayout.styles'\r\n\r\n\r\nexport const AppLayout: React.FC<{}> = ({children}) => {\r\n\r\n    return (\r\n        <Container>\r\n            <Layout>\r\n                {children}\r\n            </Layout>\r\n        </Container>\r\n    )\r\n}","import { COLORS } from \"@Assets\";\r\nimport { SHADOWS } from \"assets/styles/constants\";\r\nimport { StyledInputProps, TextInputProps } from \"components\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: block;\r\n    width: 100%;\r\n`\r\n\r\nexport const Input = styled.input<StyledInputProps>`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 12px;\r\n    border: 1px solid ${COLORS.WHITE};\r\n    outline: none;\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    box-shadow: ${SHADOWS.PRIMARY};\r\n\r\n\r\n    &:disabled {\r\n        background-color: ${COLORS.GRAY_LITE};\r\n        color: ${COLORS.GRAY};\r\n        border-color: ${COLORS.GRAY};\r\n\r\n        &::placeholder {\r\n            color: ${COLORS.GRAY_EXTA_LITE};\r\n        }\r\n    }\r\n\r\n    &::placeholder {\r\n        color: ${COLORS.WHITE_EXTA_LITE};\r\n    }\r\n\r\n    ${p => inputError(p)}\r\n    ${p => inputPostfix(p)}\r\n    ${p => design(p)}\r\n`\r\n\r\nexport const Error = styled.span<Pick<TextInputProps, 'error'>>`\r\n    display: ${p => p.error ? 'block' : 'none'};\r\n    max-width: 100%;\r\n    font-size: 12px;\r\n    color: ${COLORS.DANGER};\r\n`\r\n\r\nexport const Label = styled.label`\r\n    position: relative;\r\n    display: block;\r\n    height: 40px;\r\n`\r\n\r\nexport const Postfix = styled.div`\r\n    position: absolute;\r\n    right: 5px;\r\n    top: 5px;\r\n    bottom: 5px;\r\n    overflow: hidden;\r\n`\r\n\r\n// mixins\r\nconst inputError = (props: StyledInputProps) => {\r\n    if (props.error) return css`\r\n        border-color:  ${COLORS.DANGER};\r\n    `\r\n}\r\n\r\nconst inputPostfix = (props: StyledInputProps) => {\r\n    if (props.postfix) return css`\r\n        padding-right: 40px;\r\n    `\r\n}\r\n\r\nconst design = (props: StyledInputProps) => {\r\n    if (props.design === 'opacity') return css`\r\n        background-color: ${COLORS.WHITE_LITE};\r\n        color: ${COLORS.WHITE};\r\n    `\r\n    if (props.design === 'default') return css`\r\n        background-color: ${COLORS.WHITE};\r\n        color: ${COLORS.BLACK};\r\n    `\r\n}","import React from 'react'\r\nimport { TextInputProps } from \"./TextInput.types\";\r\nimport { Wrapper, Input, Error, Label, Postfix } from './TextInput.styles'\r\n\r\nexport const TextInput = React.forwardRef<HTMLInputElement, TextInputProps>((props, ref) => {\r\n    const {\r\n        error,\r\n        postfix,\r\n        className,\r\n        design = \"default\",\r\n        ...otherProps\r\n    } = props\r\n\r\n    return (\r\n        <Wrapper className={className}>\r\n            <Label>\r\n                <Input\r\n                    design={design}\r\n                    error={error}\r\n                    postfix={Boolean(postfix)}\r\n                    ref={ref}\r\n                    data-testid=\"input\"\r\n                    {...otherProps}\r\n                />\r\n                {\r\n                    postfix &&\r\n                    <Postfix>\r\n                        {postfix}\r\n                    </Postfix>\r\n                }\r\n            </Label>\r\n            <Error error={error} >\r\n                {error}\r\n            </Error>\r\n        </Wrapper>\r\n    )\r\n})","import { COLORS } from \"@Assets\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    width: 100%;\r\n    grid-template-columns: 30px 1fr;\r\n    gap: 15px;\r\n    align-items: center;\r\n`\r\n\r\nexport const InputWrapper = styled.label`\r\n    position: relative;\r\n    display: inline-block;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    width: 1px;\r\n    height: 1px;\r\n    opacity: 0.01;\r\n    position: absolute;\r\n    z-index: -1000;\r\n`\r\n\r\nexport const FakeInput = styled.div<{checked: boolean}>`\r\n    display: grid;\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: ${COLORS.WHITE_EXTA_LITE};\r\n    border: 1px solid ${COLORS.WHITE};\r\n    cursor: pointer;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 8px;\r\n\r\n    .checkbox-icon {\r\n        opacity: ${p => p.checked ? 1 : 0};\r\n    }\r\n`\r\n\r\nexport const Label = styled.label`\r\n\r\n`\r\n","import React from 'react'\r\nimport { CheckboxProps } from \"./Checkbox.types\";\r\nimport { Wrapper, Input, Label, InputWrapper, FakeInput } from './Checkbox.styles'\r\n\r\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>((props, ref) => {\r\n    const {\r\n        className,\r\n        children,\r\n        checked,\r\n        id,\r\n        ...otherProps\r\n    } = props\r\n\r\n    return (\r\n        <Wrapper className={className}>\r\n            <InputWrapper>\r\n                <Input\r\n                    ref={ref}\r\n                    type=\"checkbox\"\r\n                    data-testid=\"input\"\r\n                    id={id}\r\n                    {...otherProps}\r\n                />\r\n                <FakeInput checked={!!checked}>\r\n                    <i className=\"fa fa-check checkbox-icon\" />\r\n                </FakeInput>\r\n            </InputWrapper>\r\n\r\n            <Label htmlFor={id}>\r\n                {children}\r\n            </Label>\r\n        </Wrapper>\r\n    )\r\n})","import { COLORS } from \"@Assets\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ButtonProps } from './Button.types'\r\n\r\nexport const StyledButton = styled.button<ButtonProps>`\r\n    display: inline-block;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    padding: 8px 10px;\r\n    font-size: 18px;\r\n    border-radius: 8px;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: filter .2s ease;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(0.7);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: default;\r\n        filter: brightness(0.5);\r\n    }\r\n\r\n    ${whiteDesign}\r\n    ${goldDesign}\r\n`\r\n\r\n// mixins\r\n\r\nfunction goldDesign(p: ButtonProps) {\r\n    if (p.design !== 'gold') return false\r\n\r\n    return css`\r\n        color: ${COLORS.WHITE};\r\n        background: linear-gradient(90deg, ${COLORS.GOLD}, ${COLORS.GOLD_BRIGHT});\r\n    `\r\n}\r\n\r\nfunction whiteDesign(p: ButtonProps) {\r\n    if (p.design !== 'white') return false\r\n\r\n    return css`\r\n        color: ${p.textColor === 'gold' ? COLORS.GOLD : COLORS.GREEN};\r\n        background: ${COLORS.WHITE};\r\n    `\r\n}\r\n","import React from 'react'\r\nimport { StyledButton } from './Button.styles'\r\nimport { ButtonProps } from './Button.types'\r\n\r\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\r\n    const {\r\n        design = \"white\",\r\n        textColor = \"green\",\r\n        children,\r\n        ...otherProps\r\n    } = props\r\n\r\n    return (\r\n        <StyledButton\r\n            design={design}\r\n            textColor={textColor}\r\n            ref={ref}\r\n            {...otherProps}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    )\r\n})","import { BREAKPOINTS, COLORS } from \"@Assets\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { CallControlProps } from './CallControl.types'\r\n\r\nexport const StyledButton = styled.button<CallControlProps>`\r\n    display: grid;\r\n    padding: 8px 10px;\r\n    font-size: 18px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: filter .2s ease;\r\n    color: ${({fontColor}) => fontColor ? fontColor : COLORS.WHITE};\r\n    background-color: ${p => p.color === \"red\" ? COLORS.DANGER : COLORS.BLACK_LITE};\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(0.7);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: default;\r\n        filter: brightness(0.5);\r\n    }\r\n\r\n    ${p => p.size === 'small' && smallSize(p)}\r\n    ${p => p.size === 'large' && largeSize(p)}\r\n`\r\n\r\n// mixins\r\n\r\nfunction largeSize(p: CallControlProps) {\r\n    return css`\r\n        width: 75px;\r\n        height: 75px;\r\n        font-size: 26px;\r\n        border-radius: 25px;\r\n\r\n        @media (max-width: ${BREAKPOINTS.XS}px) {\r\n            width: 60px;\r\n            height: 60px;\r\n            font-size: 20px;\r\n            border-radius: 20px;\r\n        }\r\n    `\r\n}\r\n\r\nfunction smallSize(p: CallControlProps) {\r\n    return css`\r\n        width: 50px;\r\n        height: 50px;\r\n        border-radius: 50%;\r\n\r\n        @media (max-width: ${BREAKPOINTS.XS}px) {\r\n            width: 40px;\r\n            height: 40px;\r\n        }\r\n    `\r\n}\r\n","import React from 'react'\r\nimport { StyledButton } from './CallControl.styles'\r\nimport { CallControlProps } from './CallControl.types'\r\n\r\nexport const CallControl = React.forwardRef<HTMLButtonElement, CallControlProps>((props, ref) => {\r\n    const {\r\n        size = \"small\",\r\n        color = \"default\",\r\n        fontColor,\r\n        children,\r\n        ...otherProps\r\n    } = props\r\n\r\n    return (\r\n        <StyledButton\r\n            size={size}\r\n            color={color}\r\n            fontColor={fontColor}\r\n            ref={ref}\r\n            {...otherProps}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    )\r\n})","export * from './App/App'\r\nexport * from './View'\r\nexport * from './Sidebar'\r\nexport * from './common/inputs/TextInput/'\r\nexport * from './common/inputs/Checkbox/'\r\nexport * from './common/buttons/Button'\r\nexport * from './common/buttons/CallControl'\r\nexport * from './modals/CallModal'\r\nexport * from './common/company/Logo'\r\nexport * from './layout/AppLayout'"],"sourceRoot":""}